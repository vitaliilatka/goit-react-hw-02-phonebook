{"version":3,"sources":["Components/ContactForm/ContactForm.module.css","Components/Container/Container.module.css","Components/Filter/Filter.module.css","Components/ContactList/ContactList.jsx","Components/ContactForm/ContactForm.jsx","Components/Container/Container.jsx","Components/Filter/Filter.jsx","App.js","index.js","Components/ContactList/ContactList.module.css"],"names":["module","exports","ContactsListItem","name","number","onClickRemove","className","styles","type","ContactsList__button","onClick","ContactsList","filteredContacts","onRemove","length","map","id","InitialState","ContactsForm","state","handleChange","e","contacts","props","contactInState","find","contact","toLowerCase","target","value","alert","setState","handleSubmit","preventDefault","onAddContact","toLocaleLowerCase","this","onChange","buttonForm","Component","Container","children","container","Filter","onChangeFilter","defaultProps","App","filter","addContact","newContact","shortid","generate","prevState","handleChangeFilter","getFilteredContacts","includes","handleRemove","contactId","title","ContactList","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6b816aa6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonForm\":\"ContactForm_buttonForm__1h7NH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__NWeWv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Filter\":\"Filter_Filter__VHipU\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './ContactList.module.css';\n\nconst ContactsListItem = ({ name, number, onClickRemove }) => {\n  return (\n    <li className={styles.ContactsListItem}>\n      <p>\n        {name}: {number}\n      </p>\n      <button\n        type=\"button\"\n        className={styles.ContactsList__button}\n        onClick={onClickRemove}\n      >\n        Delete\n      </button>\n    </li>\n  );\n};\n\nconst ContactsList = ({ filteredContacts, onRemove }) => {\n  return (\n    filteredContacts.length > 0 && (\n      <ul className={styles.ContactsList}>\n        {filteredContacts.map(({ id, name, number }) => (\n          <ContactsListItem\n            key={id}\n            name={name}\n            number={number}\n            onClickRemove={() => onRemove(id)}\n          />\n        ))}\n      </ul>\n    )\n  );\n};\n\nContactsListItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onClickRemove: PropTypes.func.isRequired,\n};\n\nContactsList.propTypes = {\n  filteredContacts: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n  onRemove: PropTypes.func.isRequired,\n};\n\nexport default ContactsList;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './ContactForm.module.css';\n\nconst InitialState = {\n  name: '',\n  number: '',\n};\n\nexport default class ContactsForm extends Component {\n  state = InitialState;\n\n  handleChange = (type, e) => {\n    const { contacts } = this.props;\n    if (type === 'name') {\n      const contactInState = contacts.find(\n        contact => contact.name.toLowerCase() === e.target.value.toLowerCase(),\n      );\n      if (contactInState) {\n        alert(`${contactInState.name} is already in contacts!`);\n      }\n    }\n    this.setState({ [type]: e.target.value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { name, number } = this.state;\n    const { contacts, onAddContact } = this.props;\n    const contactInState = contacts.find(\n      contact => contact.name.toLowerCase() === name.toLocaleLowerCase(),\n    );\n    contactInState && alert(`${contactInState.name} is already in contacts!`);\n    if (!contactInState && name && number) {\n      onAddContact(name, number);\n      this.setState(InitialState);\n      return;\n    }\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form>\n        <h3>Name</h3>\n        <label>\n          <input\n            type=\"text\"\n            value={name}\n            onChange={e => this.handleChange('name', e)}\n          />\n        </label>\n        <br />\n        <h3>Number</h3>\n        <label>\n          <input\n            type=\"tel\"\n            value={number}\n            onChange={e => this.handleChange('number', e)}\n          />\n        </label>\n        <br />\n        <button type=\"submit\" className={styles.buttonForm}>\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nContactsForm.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n  onAddContact: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport styles from './Container.module.css';\n\nconst Container = ({ children }) => (\n  <div className={styles.container}>{children}</div>\n);\n\nContainer.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default Container;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Filter.module.css';\n\nconst Filter = ({ value, onChangeFilter }) => {\n  return (\n    <div className={styles.Filter}>\n      <p>Find contacts by name</p>\n      <input\n        type=\"text\"\n        value={value}\n        onChange={e => onChangeFilter(e.target.value)}\n      />\n    </div>\n  );\n};\n\nFilter.defaultProps = {\n  value: '',\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChangeFilter: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import React, { Component } from 'react';\nimport shortid from 'shortid';\nimport ContactList from './Components/ContactList/ContactList';\nimport ContactForm from './Components/ContactForm/ContactForm';\nimport Container from './Components/Container/Container';\nimport Filter from './Components/Filter/Filter';\nimport './styles.css';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  addContact = (name, number) => {\n    const newContact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n    this.setState(prevState => {\n      return {\n        contacts: [...prevState.contacts, newContact],\n      };\n    });\n  };\n\n  handleChangeFilter = filter => {\n    this.setState({ filter });\n  };\n\n  getFilteredContacts = () => {\n    const { contacts, filter } = this.state;\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  };\n\n  handleRemove = contactId => {\n    this.setState(prevState => {\n      return {\n        contacts: prevState.contacts.filter(({ id }) => id !== contactId),\n      };\n    });\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n    return (\n      <Container>\n        <section title=\"Phonebook\" className=\"Section\">\n          <h1>Phonebook</h1>\n          <ContactForm contacts={contacts} onAddContact={this.addContact} />\n        </section>\n        <section title=\"Contacts\" className=\"Section\">\n          <h2>Contacts</h2>\n          <Filter value={filter} onChangeFilter={this.handleChangeFilter} />\n          <ContactList\n            filteredContacts={this.getFilteredContacts()}\n            onRemove={this.handleRemove}\n          />\n        </section>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactsList\":\"ContactList_ContactsList__3-kwx\",\"ContactListItem\":\"ContactList_ContactListItem__3y2ld\"};"],"sourceRoot":""}